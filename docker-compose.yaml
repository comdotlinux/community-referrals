# Keycloak with Let's Encrypt in a Docker Swarm

# Create a secret for storing the password for Keycloak database using the command:
# printf "YourPassword" | docker secret create keycloak-postgres-password -

# Create a secret for storing the password for Keycloak administrator using the command:
# printf "YourPassword" | docker secret create keycloak-application-password -

# Clear passwords from bash history using the command:
# history -c && history -w

# Deploy Keycloak in a Docker Swarm using the command:
# docker stack deploy -c keycloak-letsencrypt-docker-swarm.yml community-referrals

version: '3.8'

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: "10m"

networks:
  internal:
    driver: overlay
  traefik-public:
    external: true

secrets:
  quarkus.datasource.username:
    external: true
  quarkus.datasource.password:
    external: true
  quarkus.datasource.jdbc.url:
    external: true

services:
  referrals:
    <<: *default-opts
    image: comdotlinux/community-referrals
    networks:
      - internal
      - traefik-public
    secrets:
      - quarkus.datasource.username
      - quarkus.datasource.password
      - quarkus.datasource.jdbc.url
    deploy:
      mode: replicated
      replicas: 1
      # Container resources (replace with yours)
      labels:
        - "traefik.enable=true"
        # Keycloak URL (replace with yours)
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"
        - "traefik.http.routers.referrals.rule=Host(`referral.kulkarni.cloud`)"
        - "traefik.http.routers.referrals-https.rule=Host(`referral.kulkarni.cloud`)"
        - "traefik.http.routers.referrals-http.entrypoints=http"
        - "traefik.http.routers.referrals-https.entrypoints=https"
        - "traefik.http.routers.referrals-https.tls.certresolver=le"
        - "traefik.http.routers.referrals-https.tls=true"
        - "traefik.http.routers.referrals-http.middlewares=https-redirect"
        - "traefik.http.routers.referrals.service=referrals"
        - "traefik.http.services.referrals.loadbalancer.passhostheader=true"
        - "traefik.http.services.referrals.loadbalancer.server.port=8080"