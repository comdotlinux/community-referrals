quarkus.http.port=${PORT:8080}
logging.level.org.atmosphere = warn
quarkus.container-image.build = true
quarkus.container-image.group = registry.heroku.com/community-referrals
quarkus.container-image.name = web
quarkus.container-image.tag = latest

# https://quarkus.io/guides/all-config#quarkus-core_quarkus.package.type
# With vaadin native application is not working yet
quarkus.native.resources.includes = META-INF/VAADIN/**,frontend/**,flow-frontend/**
quarkus.native.additional-build-args = --link-at-build-time,-H:EnableURLProtocols=http\\,https,--enable-all-security-services,-J-Xmx16g
quarkus.native.builder-image = quay.io/quarkus/ubi-quarkus-native-image:22.1-java17-amd64
quarkus.package.type = jar
quarkus.native.container-build = false

quarkus.oidc.application-type = web-app
keycloak.realm = referrals
quarkus.oidc.auth-server-url = https://auth.kulkarni.cloud/realms/${keycloak.realm}
quarkus.oidc.client-id = community-referrals-service

#%dev.quarkus.oidc.auth-server-url = https://localhost:8543/realms/quarkus
#%dev.quarkus.oidc.client-id = backend-service
#%dev.quarkus.oidc.credentials.secret = secret
#%dev.quarkus.oidc.tls.verification = none

quarkus.oidc.authentication.user-info-required = true
quarkus.http.auth.permission.authenticated.paths = *,/*
quarkus.http.auth.permission.authenticated.policy = authenticated

# configure your datasource
quarkus.datasource.db-kind = postgresql
%dev.quarkus.datasource.username = postgres
%dev.quarkus.datasource.password = postgres
%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/postgres

# drop and create the database at startup (use `update` to only update the schema)
#%dev.quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.database.generation = update
quarkus.hibernate-orm.log.format-sql = true

%dev.vaadin.servlet.productionMode=false
vaadin.servlet.productionMode=true

quarkus.http.insecure-requests = disabled